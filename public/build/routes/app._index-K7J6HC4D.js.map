{
  "version": 3,
  "sources": ["../../../app/routes/app._index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\app._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\app._index.jsx\");\n  import.meta.hot.lastModified = \"1723103542116.3398\";\n}\n// REMIX HMR END\n\nimport { useEffect } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { Link, useActionData, useNavigation, useSubmit } from \"@remix-run/react\";\nimport { Page, Layout, Text,\n// VerticalStack,\nCard, Button,\n// HorizontalStack,\nBox, Divider, List } from \"@shopify/polaris\";\nimport { authenticate } from \"../shopify.server\";\nexport const loader = async ({\n  request\n}) => {\n  await authenticate.admin(request);\n  return null;\n};\nexport async function action({\n  request\n}) {\n  const {\n    admin\n  } = await authenticate.admin(request);\n  const color = [\"Red\", \"Orange\", \"Yellow\", \"Green\"][Math.floor(Math.random() * 4)];\n  const response = await admin.graphql(`#graphql\n      mutation populateProduct($input: ProductInput!) {\n        productCreate(input: $input) {\n          product {\n            id\n            title\n            handle\n            status\n            variants(first: 10) {\n              edges {\n                node {\n                  id\n                  price\n                  barcode\n                  createdAt\n                }\n              }\n            }\n          }\n        }\n      }`, {\n    variables: {\n      input: {\n        title: `${color} Snowboard`,\n        variants: [{\n          price: Math.random() * 100\n        }]\n      }\n    }\n  });\n  const responseJson = await response.json();\n  return json({\n    product: responseJson.data.productCreate.product\n  });\n}\nexport default function Index() {\n  _s();\n  const nav = useNavigation();\n  const actionData = useActionData();\n  const submit = useSubmit();\n  const isLoading = [\"loading\", \"submitting\"].includes(nav.state) && nav.formMethod === \"POST\";\n  const productId = actionData?.product?.id.replace(\"gid://shopify/Product/\", \"\");\n  useEffect(() => {\n    if (productId) {\n      shopify.toast.show(\"Product created\");\n    }\n  }, [productId]);\n  const generateProduct = () => submit({}, {\n    replace: true,\n    method: \"POST\"\n  });\n  return <Page>\r\n      <ui-title-bar title=\"Barcode Generator\">\r\n        <Link\n      // variant=\"primary\"\n      // onClick={generateProduct}\n      to=\"/app/barcode-generator\">\r\n          Generate Barcodes\r\n        </Link>\r\n      </ui-title-bar>\r\n      {/* <VerticalStack gap=\"5\">\r\n        <Layout>\r\n          <Layout.Section>\r\n            <Card>\r\n              <VerticalStack gap=\"5\">\r\n                <VerticalStack gap=\"2\">\r\n                  <Text as=\"h2\" variant=\"headingMd\">\r\n                    Congrats on creating a new Shopify app \uD83C\uDF89\r\n                  </Text>\r\n                  <Text variant=\"bodyMd\" as=\"p\">\r\n                    This embedded app template uses{\" \"}\r\n                    <Link\r\n                      url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      App Bridge\r\n                    </Link>{\" \"}\r\n                    interface examples like an{\" \"}\r\n                    <Link url=\"/app/additional\">\r\n                      additional page in the app nav\r\n                    </Link>\r\n                    , as well as an{\" \"}\r\n                    <Link\r\n                      url=\"https://shopify.dev/docs/api/admin-graphql\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      Admin GraphQL\r\n                    </Link>{\" \"}\r\n                    mutation demo, to provide a starting point for app\r\n                    development.\r\n                  </Text>\r\n                </VerticalStack>\r\n                <VerticalStack gap=\"2\">\r\n                  <Text as=\"h3\" variant=\"headingMd\">\r\n                    Get started with products\r\n                  </Text>\r\n                  <Text as=\"p\" variant=\"bodyMd\">\r\n                    Generate a product with GraphQL and get the JSON output for\r\n                    that product. Learn more about the{\" \"}\r\n                    <Link\r\n                      url=\"https://shopify.dev/docs/api/admin-graphql/latest/mutations/productCreate\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      productCreate\r\n                    </Link>{\" \"}\r\n                    mutation in our API references.\r\n                  </Text>\r\n                </VerticalStack>\r\n                <HorizontalStack gap=\"3\" align=\"end\">\r\n                  {actionData?.product && (\r\n                    <Button\r\n                      url={`shopify:admin/products/${productId}`}\r\n                      target=\"_blank\"\r\n                    >\r\n                      View product\r\n                    </Button>\r\n                  )}\r\n                  <Button loading={isLoading} primary onClick={generateProduct}>\r\n                    Generate a product\r\n                  </Button>\r\n                </HorizontalStack>\r\n                {actionData?.product && (\r\n                  <Box\r\n                    padding=\"4\"\r\n                    background=\"bg-subdued\"\r\n                    borderColor=\"border\"\r\n                    borderWidth=\"1\"\r\n                    borderRadius=\"2\"\r\n                    overflowX=\"scroll\"\r\n                  >\r\n                    <pre style={{ margin: 0 }}>\r\n                      <code>{JSON.stringify(actionData.product, null, 2)}</code>\r\n                    </pre>\r\n                  </Box>\r\n                )}\r\n              </VerticalStack>\r\n            </Card>\r\n          </Layout.Section>\r\n          <Layout.Section secondary>\r\n            <VerticalStack gap=\"5\">\r\n              <Card>\r\n                <VerticalStack gap=\"2\">\r\n                  <Text as=\"h2\" variant=\"headingMd\">\r\n                    App template specs\r\n                  </Text>\r\n                  <VerticalStack gap=\"2\">\r\n                    <Divider />\r\n                    <HorizontalStack align=\"space-between\">\r\n                      <Text as=\"span\" variant=\"bodyMd\">\r\n                        Framework\r\n                      </Text>\r\n                      <Link url=\"https://remix.run\" target=\"_blank\">\r\n                        Remix\r\n                      </Link>\r\n                    </HorizontalStack>\r\n                    <Divider />\r\n                    <HorizontalStack align=\"space-between\">\r\n                      <Text as=\"span\" variant=\"bodyMd\">\r\n                        Database\r\n                      </Text>\r\n                      <Link url=\"https://www.prisma.io/\" target=\"_blank\">\r\n                        Prisma\r\n                      </Link>\r\n                    </HorizontalStack>\r\n                    <Divider />\r\n                    <HorizontalStack align=\"space-between\">\r\n                      <Text as=\"span\" variant=\"bodyMd\">\r\n                        Interface\r\n                      </Text>\r\n                      <span>\r\n                        <Link url=\"https://polaris.shopify.com\" target=\"_blank\">\r\n                          Polaris\r\n                        </Link>\r\n                        {\", \"}\r\n                        <Link\r\n                          url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\r\n                          target=\"_blank\"\r\n                        >\r\n                          App Bridge\r\n                        </Link>\r\n                      </span>\r\n                    </HorizontalStack>\r\n                    <Divider />\r\n                    <HorizontalStack align=\"space-between\">\r\n                      <Text as=\"span\" variant=\"bodyMd\">\r\n                        API\r\n                      </Text>\r\n                      <Link\r\n                        url=\"https://shopify.dev/docs/api/admin-graphql\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        GraphQL API\r\n                      </Link>\r\n                    </HorizontalStack>\r\n                  </VerticalStack>\r\n                </VerticalStack>\r\n              </Card>\r\n              <Card>\r\n                <VerticalStack gap=\"2\">\r\n                  <Text as=\"h2\" variant=\"headingMd\">\r\n                    Next steps\r\n                  </Text>\r\n                  <List spacing=\"extraTight\">\r\n                    <List.Item>\r\n                      Build an{\" \"}\r\n                      <Link\r\n                        url=\"https://shopify.dev/docs/apps/getting-started/build-app-example\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        {\" \"}\r\n                        example app\r\n                      </Link>{\" \"}\r\n                      to get started\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      Explore Shopify\u2019s API with{\" \"}\r\n                      <Link\r\n                        url=\"https://shopify.dev/docs/apps/tools/graphiql-admin-api\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        GraphiQL\r\n                      </Link>\r\n                    </List.Item>\r\n                  </List>\r\n                </VerticalStack>\r\n              </Card>\r\n            </VerticalStack>\r\n          </Layout.Section>\r\n        </Layout>\r\n       </VerticalStack> */}\r\n    </Page>;\n}\n_s(Index, \"DJCLLfqNMkauIsSoxpEWeZL/QGs=\", false, function () {\n  return [useNavigation, useActionData, useSubmit];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,mBAA0B;AAC1B,kBAAqB;AAOrB,qBAA6B;AAmErB;AA/FR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sCAAwC,EAAE;AAAA,EACnF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6B;AAC7B,cAAY,IAAI,eAAe;AACjC;AA4De,SAAR,QAAyB;AA9EhC;AA+EE,KAAG;AACH,QAAM,MAAM,cAAc;AAC1B,QAAM,aAAa,cAAc;AACjC,QAAM,SAAS,UAAU;AACzB,QAAM,YAAY,CAAC,WAAW,YAAY,EAAE,SAAS,IAAI,KAAK,KAAK,IAAI,eAAe;AACtF,QAAM,aAAY,8CAAY,YAAZ,mBAAqB,GAAG,QAAQ,0BAA0B;AAC5E,8BAAU,MAAM;AACd,QAAI,WAAW;AACb,cAAQ,MAAM,KAAK,iBAAiB;AAAA,IACtC;AAAA,EACF,GAAG,CAAC,SAAS,CAAC;AACd,QAAM,kBAAkB,MAAM,OAAO,CAAC,GAAG;AAAA,IACvC,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,CAAC;AACD,SAAO,mDAAC,QACJ,6DAAC,kBAAa,OAAM,qBAClB;AAAA,IAAC;AAAA;AAAA,MAGH,IAAG;AAAA,MAAyB;AAAA;AAAA,IAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,KANF;AAAA;AAAA;AAAA;AAAA,SAOA,KARG;AAAA;AAAA;AAAA;AAAA,SAmLL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,eAAe,eAAe,SAAS;AACjD,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
