import {
  require_commondir
} from "./chunk-3PIGYQSE.js";
import {
  basename,
  dirname,
  extname,
  isAbsolute,
  join,
  normalize,
  relative,
  resolve
} from "./chunk-GXPKATXW.js";
import {
  __toESM,
  init_cjs_shims
} from "./chunk-M63RTPGR.js";

// ../cli-kit/src/public/node/path.ts
init_cjs_shims();
var import_commondir = __toESM(require_commondir(), 1);
import { fileURLToPath } from "url";
function joinPath(...paths) {
  return join(...paths);
}
function normalizePath(path) {
  return normalize(path);
}
function resolvePath(...paths) {
  return resolve(...paths);
}
function relativePath(from, to) {
  return relative(from, to);
}
function isAbsolutePath(path) {
  return isAbsolute(path);
}
function dirname2(path) {
  return dirname(path);
}
function basename2(path, ext) {
  return basename(path, ext);
}
function extname2(path) {
  return extname(path);
}
function relativizePath(path, dir = cwd()) {
  const result = (0, import_commondir.default)([path, dir]);
  const relativePath2 = relative(dir, path);
  const relativeComponents = relativePath2.split("/").filter((component) => component === "..").length;
  if (result === "/" || relativePath2 === "" || relativeComponents > 2) {
    return path;
  } else {
    return relativePath2;
  }
}
function moduleDirectory(moduleURL) {
  return dirname2(fileURLToPath(moduleURL));
}
function cwd() {
  return normalize(process.env.INIT_CWD ? process.env.INIT_CWD : process.cwd());
}

export {
  joinPath,
  normalizePath,
  resolvePath,
  relativePath,
  isAbsolutePath,
  dirname2 as dirname,
  basename2 as basename,
  extname2 as extname,
  relativizePath,
  moduleDirectory,
  cwd
};
