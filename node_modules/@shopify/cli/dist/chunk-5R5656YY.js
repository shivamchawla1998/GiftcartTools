import {
  fileExistsSync
} from "./chunk-4IXC46ZA.js";
import {
  require_lib
} from "./chunk-67MDUPX5.js";
import {
  cwd,
  joinPath
} from "./chunk-MHMFNQE3.js";
import {
  __toESM,
  init_cjs_shims
} from "./chunk-M63RTPGR.js";

// ../cli-kit/src/public/node/custom-oclif-loader.ts
init_cjs_shims();
var import_core = __toESM(require_lib(), 1);
var ShopifyConfig = class extends import_core.Config {
  constructor(options) {
    const path = sniffForPath() ?? cwd();
    if (fileExistsSync(joinPath(`${path}`, "package.json"))) {
      options.pluginAdditions = {
        core: ["@shopify/cli-hydrogen"],
        path
      };
    }
    super(options);
    this["determinePriority"] = this.customPriority;
  }
  customPriority(commands) {
    const oclifPlugins = this.pjson.oclif?.plugins ?? [];
    const commandPlugins = commands.sort((aCommand, bCommand) => {
      const pluginAliasA = aCommand.pluginAlias ?? "A-Cannot-Find-This";
      const pluginAliasB = bCommand.pluginAlias ?? "B-Cannot-Find-This";
      const aIndex = oclifPlugins.indexOf(pluginAliasA);
      const bIndex = oclifPlugins.indexOf(pluginAliasB);
      if (aCommand.pluginType === "core" && bCommand.pluginAlias === "@shopify/cli-hydrogen") {
        return 1;
      }
      if (aCommand.pluginAlias === "@shopify/cli-hydrogen" && bCommand.pluginType === "core") {
        return -1;
      }
      if (aCommand.pluginType === "core" && bCommand.pluginType === "core") {
        return aIndex - bIndex;
      }
      if (bCommand.pluginType === "core" && aCommand.pluginType !== "core") {
        return 1;
      }
      if (aCommand.pluginType === "core" && bCommand.pluginType !== "core") {
        return -1;
      }
      if (aCommand.pluginType === "jit" && bCommand.pluginType !== "jit") {
        return 1;
      }
      if (bCommand.pluginType === "jit" && aCommand.pluginType !== "jit") {
        return -1;
      }
      return 0;
    });
    return commandPlugins[0];
  }
};
function sniffForPath() {
  const pathFlagIndex = process.argv.indexOf("--path");
  if (pathFlagIndex === -1)
    return;
  const pathFlag = process.argv[pathFlagIndex + 1];
  if (!pathFlag || pathFlag.startsWith("-"))
    return;
  return pathFlag;
}

export {
  ShopifyConfig,
  sniffForPath
};
