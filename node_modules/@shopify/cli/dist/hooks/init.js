import {
  sniffForPath
} from "../chunk-5R5656YY.js";
import {
  fileExistsSync,
  renderWarning
} from "../chunk-4IXC46ZA.js";
import "../chunk-LUGC3D2G.js";
import "../chunk-FQIRJADJ.js";
import "../chunk-FBB6KUZG.js";
import "../chunk-PCQFWMMD.js";
import "../chunk-SZQX5J7X.js";
import "../chunk-67MDUPX5.js";
import "../chunk-PBFWVFAQ.js";
import "../chunk-FWGRGI4R.js";
import "../chunk-BE73NZXB.js";
import "../chunk-VQZ2SHRY.js";
import "../chunk-6SL33DOA.js";
import "../chunk-WCNR75S2.js";
import {
  cwd,
  joinPath
} from "../chunk-MHMFNQE3.js";
import "../chunk-3PIGYQSE.js";
import "../chunk-BZJX2NV6.js";
import "../chunk-RQ24VTW4.js";
import "../chunk-3JLUTHGR.js";
import "../chunk-GXPKATXW.js";
import {
  init_cjs_shims
} from "../chunk-M63RTPGR.js";

// src/hooks/init.ts
init_cjs_shims();
import { readFileSync } from "fs";
var hook = async (options) => {
  const isHydrogenCommand = options.id?.startsWith("hydrogen:") ?? false;
  const isHydrogenInitCommand = options.id?.startsWith("hydrogen:init") ?? false;
  if (isHydrogenCommand && !isHydrogenInitCommand) {
    const path = sniffForPath() ?? cwd();
    const packageJsonPath = joinPath(path, "package.json");
    if (!fileExistsSync(packageJsonPath))
      showWarningAndExit();
    const packageJsonContent = readFileSync(packageJsonPath, "utf8");
    const packageJson = JSON.parse(packageJsonContent);
    const packageJsonDependencies = packageJson.dependencies;
    const dependenciesIncludeHydrogen = packageJsonDependencies["@shopify/hydrogen"] !== void 0;
    if (!dependenciesIncludeHydrogen)
      showWarningAndExit();
  }
};
function showWarningAndExit() {
  renderWarning({
    body: [
      `Looks like you're trying to run a Hydrogen command outside of a Hydrogen project.`,
      "Run",
      { command: "shopify hydrogen init" },
      "to create a new Hydrogen project."
    ]
  });
  process.exit();
}
var init_default = hook;
export {
  init_default as default
};
