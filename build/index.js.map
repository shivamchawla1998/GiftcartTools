{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.jsx", "../app/shopify.server.js", "../app/db.server.js", "../app/root.jsx", "../app/routes/app.dashboard_28_Nov_23.tsx", "../app/components/BarcodeGenerator.jsx", "../app/components/MyEditableTable.tsx", "../app/routes/app.barcode-generator.tsx", "../app/routes/app.dashboard copy.tsx", "../app/routes/app.additional.jsx", "../app/routes/app.portfolio.jsx", "../app/routes/app._index.jsx", "../app/routes/auth.login/route.jsx", "../app/routes/auth.login/error.server.jsx", "../app/routes/webhooks.jsx", "../app/routes/_index/route.jsx", "../app/routes/auth.$.jsx", "../app/routes/app.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { isbot } from \"isbot\";\n\nimport { addDocumentResponseHeaders } from \"./shopify.server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default async function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext,\n  _loadContext,\n) {\n  addDocumentResponseHeaders(request, responseHeaders);\n\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(createReadableStreamFromReadable(body), {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            }),\n          );\n\n          pipe(body);\n        },\n        onShellError(error) {\n          reject(error);\n        },\n        onError(error) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      },\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import \"@shopify/shopify-app-remix/adapters/node\";\nimport {\n  AppDistribution,\n  DeliveryMethod,\n  shopifyApp,\n  LATEST_API_VERSION,\n} from \"@shopify/shopify-app-remix/server\";\nimport { PrismaSessionStorage } from \"@shopify/shopify-app-session-storage-prisma\";\nimport { restResources } from \"@shopify/shopify-api/rest/admin/2023-07\";\n\nimport prisma from \"./db.server\";\n\nconst shopify = shopifyApp({\n  apiKey: process.env.SHOPIFY_API_KEY,\n  apiSecretKey: process.env.SHOPIFY_API_SECRET || \"\",\n  apiVersion: LATEST_API_VERSION,\n  scopes: process.env.SCOPES?.split(\",\"),\n  appUrl: process.env.SHOPIFY_APP_URL || \"\",\n  authPathPrefix: \"/auth\",\n  sessionStorage: new PrismaSessionStorage(prisma),\n  distribution: AppDistribution.AppStore,\n  restResources,\n  webhooks: {\n    APP_UNINSTALLED: {\n      deliveryMethod: DeliveryMethod.Http,\n      callbackUrl: \"/webhooks\",\n    },\n  },\n  hooks: {\n    afterAuth: async ({ session }) => {\n      shopify.registerWebhooks({ session });\n    },\n  },\n  ...(process.env.SHOP_CUSTOM_DOMAIN\n    ? { customShopDomains: [process.env.SHOP_CUSTOM_DOMAIN] }\n    : {}),\n});\n\nexport default shopify;\nexport const apiVersion = LATEST_API_VERSION;\nexport const addDocumentResponseHeaders = shopify.addDocumentResponseHeaders;\nexport const authenticate = shopify.authenticate;\nexport const unauthenticated = shopify.unauthenticated;\nexport const login = shopify.login;\nexport const registerWebhooks = shopify.registerWebhooks;\nexport const sessionStorage = shopify.sessionStorage;\n", "import { PrismaClient } from \"@prisma/client\";\n\nconst prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (!global.prisma) {\n    global.prisma = new PrismaClient();\n  }\n}\n\nexport default prisma;\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport default function App() {\n  return (\n    <html>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <LiveReload />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n", "import {\n  Box,\n  Card,\n  DataTable,\n  Layout,\n  Link,\n  List,\n  Page,\n  Text,\n  VerticalStack,\n} from \"@shopify/polaris\";\nimport { createColumnHelper, flexRender, getCoreRowModel, useReactTable } from \"@tanstack/react-table\";\nimport { useReducer, useState } from \"react\";\nimport BarcodeGenerator from \"~/components/BarcodeGenerator\";\nimport MyEditableTable from \"~/components/MyEditableTable\";\n\ntype Item = {\n  itemName: string\n  itemCode: string\n  noOfLabels: number\n  header: string\n  line1: string\n  line2: string\n}\n\nconst defaultData: Item[] = [\n  {\n    itemName: 'tanner',\n    itemCode: 'linsley',\n    noOfLabels: 24,\n    header: \"100\",\n    line1: 'In Relationship',\n    line2: \"50\",\n  }\n]\n\n// const columnHelper = createColumnHelper<Item>()\n\n// const columns = [\n//   columnHelper.accessor('itemName', {\n//     cell: info => info.getValue(),\n//     header: () => <span>Item Name</span>,\n//     // footer: info => info.column.id,\n//   }),\n//   columnHelper.accessor(row => row.itemCode, {\n//     id: 'itemCode',\n//     cell: info => <i>{info.getValue()}</i>,\n//     header: () => <span>Item Code</span>,\n//     // footer: info => info.column.id,\n//   }),\n//   columnHelper.accessor('noOfLabels', {\n//     header: () => <span>No. of Labels</span>,\n//     cell: info => info.renderValue(),\n//     // footer: info => info.column.id,\n//   }),\n//   columnHelper.accessor('header', {\n//     header: () => <span>Header</span>,\n//     // footer: info => info.column.id,\n//   }),\n//   columnHelper.accessor('line1', {\n//     header: () => <span>Line 1</span>,\n//     // footer: info => info.column.id,\n//   }),\n//   columnHelper.accessor('line2', {\n//     header: () => <span>Line 2</span>,\n//     // footer: info => info.column.id,\n//   }),\n// ]\n\nexport default function Dashboard(props) {\n\n  const [data, setData] = useState(() => [...defaultData])\n  // const rerender = useReducer(() => ({}), {})[1]\n\n  // const table = useReactTable({\n  //   data,\n  //   columns,\n  //   getCoreRowModel: getCoreRowModel(),\n  // })\n\n  // const rows = [\n  //   ['Emerald Silk Gown', '$875.00', 124689, 140, '$122,500.00'],\n  //   ['Mauve Cashmere Scarf', '$230.00', 124533, 83, '$19,090.00'],\n  //   ['Navy Merino Wool Blazer', '$445.00', 124518, 32, '$14,240.00'],\n  //   // Add more rows as needed\n  // ];\n\n  // const [data, setData] = useState([\n  //   { id: 1, product: 'Emerald Silk Gown', price: '$875.00' },\n  //   { id: 2, product: 'Mauve Cashmere Scarf', price: '$230.00' },\n  //   // Add more data rows as needed\n  // ]);\n\n  const handlePriceChange = (rowIndex, newValue) => {\n    const updatedData = [...data];\n    updatedData[rowIndex].noOfLabels = newValue;\n    setData(updatedData);\n  };\n\n  const columns = [\n    {\n      title: 'Item Name',\n      dataIndex: 'itemName',\n    },\n    {\n      title: 'Item Code',\n      dataIndex: 'itemCode',\n    },\n    {\n      title: 'No. Of Labels',\n      dataIndex: 'noOfLabels',\n      render: (value, row, rowIndex) => (\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => handlePriceChange(rowIndex, e.target.value)}\n        />\n      ),\n    },\n    {\n      title: 'Header',\n      dataIndex: 'header',\n    },\n    {\n      title: 'Line 1',\n      dataIndex: 'line1',\n    },\n    {\n      title: 'Line 2',\n      dataIndex: 'line2',\n    },\n  ];\n\n  // const columnHelper = createColumnHelper<Person>()\n\n  // Make some columns!\n  // const defaultColumns = [\n  //   // Display Column\n  //   columnHelper.display({\n  //     id: 'actions',\n  //     cell: props => <RowActions row={props.row} />,\n  //   }),\n  //   // Grouping Column\n  //   columnHelper.group({\n  //     header: 'Name',\n  //     footer: props => props.column.id,\n  //     columns: [\n  //       // Accessor Column\n  //       columnHelper.accessor('firstName', {\n  //         cell: info => info.getValue(),\n  //         footer: props => props.column.id,\n  //       }),\n  //       // Accessor Column\n  //       columnHelper.accessor(row => row.lastName, {\n  //         id: 'lastName',\n  //         cell: info => info.getValue(),\n  //         header: () => <span>Last Name</span>,\n  //         footer: props => props.column.id,\n  //       }),\n  //     ],\n  //   }),\n  //   // Grouping Column\n  //   columnHelper.group({\n  //     header: 'Info',\n  //     footer: props => props.column.id,\n  //     columns: [\n  //       // Accessor Column\n  //       columnHelper.accessor('age', {\n  //         header: () => 'Age',\n  //         footer: props => props.column.id,\n  //       }),\n  //       // Grouping Column\n  //       columnHelper.group({\n  //         header: 'More Info',\n  //         columns: [\n  //           // Accessor Column\n  //           columnHelper.accessor('visits', {\n  //             header: () => <span>Visits</span>,\n  //             footer: props => props.column.id,\n  //           }),\n  //           // Accessor Column\n  //           columnHelper.accessor('status', {\n  //             header: 'Status',\n  //             footer: props => props.column.id,\n  //           }),\n  //           // Accessor Column\n  //           columnHelper.accessor('progress', {\n  //             header: 'Profile Progress',\n  //             footer: props => props.column.id,\n  //           }),\n  //         ],\n  //       }),\n  //     ],\n  //   }),\n  // ]\n\n  return (\n    <Page>\n      <ui-title-bar title=\"Dashboard\" />\n      <div>\n        <h1>Barcode Generator</h1>\n        <BarcodeGenerator value=\"123456789\" />\n      </div>\n\n      {/* <Card>\n        <DataTable\n          columnContentTypes={['text', 'numeric', 'numeric', 'numeric', 'numeric']}\n          headings={columns1.map((column) => column.title)}\n          rows={rows}\n        />\n      </Card> */}\n      <Card>\n        <MyEditableTable columns={columns} data={data} />\n      </Card>\n      <div>\n\n        {/* <div className=\"p-2\">\n          <table>\n            <thead>\n              {table.getHeaderGroups().map(headerGroup => (\n                <tr key={headerGroup.id}>\n                  {headerGroup.headers.map(header => (\n                    <th key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody>\n              {table.getRowModel().rows.map(row => (\n                <tr key={row.id}>\n                  {row.getVisibleCells().map(cell => (\n                    <td key={cell.id}>\n                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n            <tfoot>\n              {table.getFooterGroups().map(footerGroup => (\n                <tr key={footerGroup.id}>\n                  {footerGroup.headers.map(header => (\n                    <th key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                          header.column.columnDef.footer,\n                          header.getContext()\n                        )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </tfoot>\n          </table>\n          <div className=\"h-4\" />\n          <button onClick={() => rerender()} className=\"border p-2\">\n            Rerender\n          </button>\n        </div> */}\n\n      </div>\n      {/* <Layout>\n        <Layout.Section>\n          <Card>\n            <VerticalStack gap=\"3\">\n              <Text as=\"p\" variant=\"bodyMd\">\n                The app template comes with an additional page which\n                demonstrates how to create multiple pages within app navigation\n                using{\" \"}\n                <Link\n                  url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                  target=\"_blank\"\n                >\n                  App Bridge\n                </Link>\n                .\n              </Text>\n              <Text as=\"p\" variant=\"bodyMd\">\n                To create your own page and have it show up in the app\n                navigation, add a page inside <Code>app/routes</Code>, and a\n                link to it in the <Code>&lt;ui-nav-menu&gt;</Code> component\n                found in <Code>app/routes/app.jsx</Code>.\n              </Text>\n            </VerticalStack>\n          </Card>\n        </Layout.Section>\n        <Layout.Section secondary>\n          <Card>\n            <VerticalStack gap=\"2\">\n              <Text as=\"h2\" variant=\"headingMd\">\n                Resources\n              </Text>\n              <List spacing=\"extraTight\">\n                <List.Item>\n                  <Link\n                    url=\"https://shopify.dev/docs/apps/design-guidelines/navigation#app-nav\"\n                    target=\"_blank\"\n                  >\n                    App nav best practices\n                  </Link>\n                </List.Item>\n              </List>\n            </VerticalStack>\n          </Card>\n        </Layout.Section>\n      </Layout> */}\n\n    </Page>\n  );\n}\n\nfunction Code({ children }) {\n  return (\n    <Box\n      as=\"span\"\n      padding=\"025\"\n      paddingInlineStart=\"1\"\n      paddingInlineEnd=\"1\"\n      background=\"bg-subdued\"\n      borderWidth=\"1\"\n      borderColor=\"border\"\n      borderRadius=\"1\"\n    >\n      <code>{children}</code>\n    </Box>\n  );\n}\n", "import React, { useEffect, useRef } from 'react';\nimport JsBarcode from 'jsbarcode';\n\nconst BarcodeGenerator = ({ data }) => {\n  const barcodeRef = useRef(null);\n  // console.log(data);\n\n  useEffect(() => {\n    // Generate barcode when the component mounts\n    JsBarcode(barcodeRef.current, data.itemCode, { format: 'CODE128' });\n  }, [data]);\n\n  return (\n    <div\n      style={{\n        maxWidth: 'fit-content',\n        // height: '21mm',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        backgroundColor: '#fff'\n      }}>\n      {/* Container to display the barcode */}\n      <span style={{ textAlign: 'center', fontSize: '0.6rem', lineHeight: '0.65rem', fontWeight: 'bold' }}>{data?.header}</span>\n      <img\n        style={{ width: '31mm', maxHeight: '10mm' }}\n        ref={barcodeRef}\n      ></img>\n      <span style={{ textAlign: 'center', fontSize: '0.45rem', lineHeight: '0.5rem' }}>{data?.line1}</span>\n      <span style={{ textAlign: 'center', fontSize: '0.45rem', lineHeight: '0.5rem' }}>{data?.line2}</span>\n    </div>\n  );\n};\n\nexport default BarcodeGenerator;\n", "import React, { useState } from 'react';\nimport { Page, Card, DataTable } from '@shopify/polaris';\n\nconst MyEditableTable = ({ columns, data, onPriceChange }) => {\n\n  console.log(\"Data: \", data)\n  const dataAsArray = data.map((item) => Object.values(item));\n\n  const rows = dataAsArray.map((item, rowIndex) => ({\n    id: rowIndex,\n    ...item, // Use the object directly, assuming keys match dataIndex in columns\n    cells: columns.map((column, columnIndex) => ({\n      content:\n        column.dataIndex === 'noOfLabels' ? (\n          <input\n            value={item.noOfLabels}\n            onChange={(value) => onPriceChange(rowIndex, value)}\n          />\n        ) : (\n          item[column.dataIndex]\n        ),\n    })),\n  }));\n\n  return (\n    // <Page title=\"Product Prices\">\n    //   <Card>\n    <DataTable\n      columnContentTypes={['text', 'numeric', 'numeric', 'numeric', 'numeric']}\n      headings={columns.map((column) => column.title)}\n      // rows={[]}\n      rows={dataAsArray}\n    />\n    //   </Card>\n    // </Page>\n  );\n};\n\nexport default MyEditableTable;\n", "import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { Page, Card, Layout, Button, TextField, BlockStack, InlineStack, Select } from '@shopify/polaris';\nimport BarcodeGenerator from '~/components/BarcodeGenerator';\nimport BarcodePreview from '~/components/BarCodePreview';\nimport { useReactToPrint } from 'react-to-print';\ninterface ComponentData {\n  itemName: string;\n  itemCode: string;\n  noOfLabels: number;\n  header: string;\n  line1: string;\n  line2: string;\n}\n\nconst BarcodePrintable: React.FC<{\n  data: ComponentData;\n  labelsPerPage: number;\n  pageRef: React.RefObject<HTMLDivElement>;\n}> = ({ data, labelsPerPage, pageRef }) => {\n  const { noOfLabels } = data;\n  const barcodeWidth = 50; // in mm\n  const barcodeHeight = 30; // in mm\n\n  const pageStyle: React.CSSProperties = {\n    width: '210mm', // A4 width in mm\n    height: '297mm', // A4 height in mm\n    display: 'grid',\n    gridTemplateColumns: 'repeat(5, 1fr)',\n    gridTemplateRows: 'repeat(13, 1fr)',\n    // gap: '4px',\n    padding: '50px 20px'\n    // pageBreakAfter: 'always', // Ensure each page starts on a new page when printing\n  };\n\n  const calculateLabelsOnPage = (pageIndex) => {\n    const labelsOnThisPage = pageIndex < Math.ceil(noOfLabels / labelsPerPage) - 1\n      ? labelsPerPage\n      : noOfLabels % labelsPerPage || labelsPerPage;\n    return labelsOnThisPage;\n  };\n\n  return (\n    <div ref={pageRef}>\n      {[...Array(Math.ceil(noOfLabels / labelsPerPage))].map((_, pageIndex) => {\n        const labelsOnThisPage = calculateLabelsOnPage(pageIndex);\n        return (\n          <div key={pageIndex} style={pageStyle}>\n            {[...Array(labelsOnThisPage)].map((_, labelIndex) => (\n              <div\n                key={labelIndex}\n                style={{\n                  // padding: '5px 10px',\n                  maxWidth: `${barcodeWidth}mm`,\n                  margin: '0.3 .5em',\n                  background: '#fff',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  border: '1px dashed #999',\n                }}\n              >\n                {/* Add your label content here */}\n                {labelIndex < noOfLabels && <BarcodeGenerator data={data} />}\n              </div>\n            ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst IndividualComponent = ({ index, onDataChange }) => {\n  const [componentData, setComponentData] = useState({\n    itemName: '',\n    itemCode: '',\n    noOfLabels: '',\n    header: '',\n    line1: '',\n    line2: '',\n  });\n\n  const handleInputChange = (key, value) => {\n    setComponentData((prevData) => ({\n      ...prevData,\n      [key]: value,\n    }));\n\n    onDataChange(index, {\n      ...componentData,\n      [key]: value,\n    });\n  };\n\n  return (\n    <InlineStack gap='500'>\n      <TextField\n        label=\"Item Name\"\n        value={componentData.itemName}\n        onChange={(value) => handleInputChange('itemName', value)}\n        autoComplete=\"off\"\n      />\n      <TextField\n        label=\"Item Code\"\n        value={componentData.itemCode}\n        onChange={(value) => handleInputChange('itemCode', value)}\n        autoComplete=\"off\"\n      />\n      <TextField\n        label=\"No. Of Labels\"\n        type=\"number\"\n        value={componentData.noOfLabels}\n        onChange={(value) => handleInputChange('noOfLabels', value)}\n        autoComplete=\"off\"\n      />\n      <TextField\n        label=\"Header\"\n        value={componentData.header}\n        onChange={(value) => handleInputChange('header', value)}\n        autoComplete=\"off\"\n      />\n      <TextField\n        label=\"Line 1\"\n        value={componentData.line1}\n        onChange={(value) => handleInputChange('line1', value)}\n        autoComplete=\"off\"\n      />\n      <TextField\n        label=\"Line 2\"\n        value={componentData.line2}\n        onChange={(value) => handleInputChange('line2', value)}\n        autoComplete=\"off\"\n      />\n    </InlineStack>\n  );\n};\n\nconst BarCodeGenerator = () => {\n\n  const pageStyle: React.CSSProperties = {\n    width: '210mm', // A4 width in mm\n    height: '297mm', // A4 height in mm\n    // pageBreakInside: 'avoid',\n    // display: 'flex',\n    // flexWrap: 'wrap',\n  };\n\n  const [componentList, setComponentList] = useState<ComponentData[]>([]);\n  const [selectedPrinter, setSelectedPrinter] = useState('Regular Printer');\n  const [selectedSize, setSelectedSize] = useState('65 Labels (38 * 21mm)');\n  const [isPrinting, setIsPrinting] = useState(false);\n\n  const componentRef = useRef<HTMLDivElement | null>(null);\n  const pageRef = useRef<HTMLDivElement | null>(null);\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n    pageStyle: `\n      @page {\n        size: 210mm 297mm; /* A4 size */\n        margin: 0;\n      }\n      body {\n        size: 210mm 297mm; /* A4 size */\n        margin: 0;\n      }\n    `,\n  });\n\n  useEffect(() => {\n    if (componentRef.current) {\n      // Do something when the component is rendered\n    }\n  }, [componentList]);\n\n  const handlePrinterChange = useCallback(\n    (value: string) => setSelectedPrinter(value),\n    [],\n  );\n\n  const handleSizeChange = useCallback(\n    (value: string) => setSelectedSize(value),\n    [],\n  );\n\n  const optionsPrinter = [\n    { label: 'Regular Printer', value: 'Regular Printer' },\n  ];\n\n  const optionsSize = [\n    { label: '65 Labels (38 * 21mm)', value: '65 Labels (38 * 21mm)' },\n  ];\n\n\n  const addComponent = () => {\n    setComponentList((prevList) => [...prevList, {} as ComponentData]);\n  };\n\n  const handleComponentDataChange = useCallback(\n    (index: number, data: ComponentData) => {\n      setComponentList((prevList) =>\n        prevList.map((item, i) => (i === index ? data : item))\n      );\n    },\n    [setComponentList]\n  );\n\n\n  return (\n    <Page>\n      <ui-title-bar title=\"Barcode Generator\" />\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <InlineStack gap='500' align='end'>\n              <Select\n                label=\"Printer\"\n                options={optionsPrinter}\n                onChange={handlePrinterChange}\n                value={selectedPrinter}\n                labelInline={true}\n              />\n              <Select\n                label=\"Size\"\n                labelInline={true}\n                options={optionsSize}\n                onChange={handleSizeChange}\n                value={selectedSize}\n              />\n              {componentList.length > 0 ?\n                <>\n                  <Button variant=\"tertiary\" onClick={addComponent}>\n                    + Add More\n                  </Button>\n                </> :\n                <>\n                  <Button variant='tertiary' onClick={addComponent}>\n                    + Add\n                  </Button>\n                </>\n              }\n            </InlineStack>\n          </Card>\n        </Layout.Section>\n        <Layout.Section>\n          {componentList.map((data, index) => (\n            <div className='mt-12' style={{ marginTop: '10px' }}>\n              <Card>\n                <IndividualComponent\n                  key={index}\n                  index={index}\n                  onDataChange={handleComponentDataChange}\n                />\n              </Card>\n            </div>\n          ))}\n\n        </Layout.Section>\n        {(componentList.length > 0) &&\n          <>\n            <Layout.Section>\n              <Card>\n                <Button variant='primary' onClick={handlePrint}>\n                  Generate\n                </Button>\n              </Card>\n              <br></br>\n              <Card>\n                <InlineStack gap='100'>\n                  {componentList.map((value, index) => (\n                    <div key={index}>\n                      {/* {value.itemCode && <BarcodePrintable data={value} labelsPerPage={65} />} */}\n                      {value.itemCode && <BarcodeGenerator data={value} />}\n                    </div>\n                  ))}\n                </InlineStack>\n              </Card>\n            </Layout.Section>\n            <div>\n              <Layout.Section>\n                <div ref={componentRef}>\n                  {componentList.map((value, index) => (\n                    <div key={index} className=\"printable-page\">\n                      {value.itemCode && <BarcodePrintable key={index} data={value} labelsPerPage={65} pageRef={pageRef} />}\n                    </div>\n                  ))}\n                </div>\n              </Layout.Section>\n            </div>\n          </>\n        }\n      </Layout>\n    </Page>\n  );\n};\n\nexport default BarCodeGenerator;\n", "import {\n  Box,\n  Card,\n  DataTable,\n  Layout,\n  Link,\n  List,\n  Page,\n  Text,\n  VerticalStack,\n} from \"@shopify/polaris\";\nimport { useReducer, useState } from \"react\";\nimport BarcodeGenerator from \"~/components/BarcodeGenerator\";\nimport MyEditableTable from \"~/components/MyEditableTable\";\n\ntype Item = {\n  itemName: string\n  itemCode: string\n  noOfLabels: number\n  header: string\n  line1: string\n  line2: string\n}\n\nconst defaultData: Item[] = [\n  {\n    itemName: 'tanner',\n    itemCode: 'linsley',\n    noOfLabels: 24,\n    header: \"100\",\n    line1: 'In Relationship',\n    line2: \"50\",\n  }\n]\n\nexport default function Dashboard(props) {\n\n  const [data, setData] = useState(() => [...defaultData])\n\n  const handlePriceChange = (rowIndex, newValue) => {\n    const updatedData = [...data];\n    updatedData[rowIndex].noOfLabels = newValue;\n    setData(updatedData);\n  };\n\n  const columns = [\n    {\n      title: 'Item Name',\n      dataIndex: 'itemName',\n    },\n    {\n      title: 'Item Code',\n      dataIndex: 'itemCode',\n    },\n    {\n      title: 'No. Of Labels',\n      dataIndex: 'noOfLabels',\n      render: (value, row, rowIndex) => (\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => handlePriceChange(rowIndex, e.target.value)}\n        />\n      ),\n    },\n    {\n      title: 'Header',\n      dataIndex: 'header',\n    },\n    {\n      title: 'Line 1',\n      dataIndex: 'line1',\n    },\n    {\n      title: 'Line 2',\n      dataIndex: 'line2',\n    },\n  ];\n\n  return (\n    <Page>\n      <ui-title-bar title=\"Dashboard\" />\n      <div>\n        <h1>Barcode Generator</h1>\n        <BarcodeGenerator value=\"123456789\" />\n      </div>\n      <Card>\n        <MyEditableTable columns={columns} data={data}  onPriceChange={handlePriceChange}/>\n      </Card>\n    </Page>\n  );\n}\n\nfunction Code({ children }) {\n  return (\n    <Box\n      as=\"span\"\n      padding=\"025\"\n      paddingInlineStart=\"1\"\n      paddingInlineEnd=\"1\"\n      background=\"bg-subdued\"\n      borderWidth=\"1\"\n      borderColor=\"border\"\n      borderRadius=\"1\"\n    >\n      <code>{children}</code>\n    </Box>\n  );\n}\n", "import {\n  Box,\n  Card,\n  Layout,\n  Link,\n  List,\n  Page,\n  Text,\n  // VerticalStack,\n} from \"@shopify/polaris\";\n\nexport default function AdditionalPage() {\n  return (\n    <Page>\n      <ui-title-bar title=\"Additional page\" />\n      <Layout>\n        <Layout.Section>\n          <Card>\n            {/* <VerticalStack gap=\"3\">\n              <Text as=\"p\" variant=\"bodyMd\">\n                The app template comes with an additional page which\n                demonstrates how to create multiple pages within app navigation\n                using{\" \"}\n                <Link\n                  url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                  target=\"_blank\"\n                >\n                  App Bridge\n                </Link>\n                .\n              </Text>\n              <Text as=\"p\" variant=\"bodyMd\">\n                To create your own page and have it show up in the app\n                navigation, add a page inside <Code>app/routes</Code>, and a\n                link to it in the <Code>&lt;ui-nav-menu&gt;</Code> component\n                found in <Code>app/routes/app.jsx</Code>.\n              </Text>\n            </VerticalStack> */}\n          </Card>\n        </Layout.Section>\n        <Layout.Section>\n          <Card>\n            {/* <VerticalStack gap=\"2\">\n              <Text as=\"h2\" variant=\"headingMd\">\n                Resources\n              </Text>\n              <List spacing=\"extraTight\">\n                <List.Item>\n                  <Link\n                    url=\"https://shopify.dev/docs/apps/design-guidelines/navigation#app-nav\"\n                    target=\"_blank\"\n                  >\n                    App nav best practices\n                  </Link>\n                </List.Item>\n              </List>\n            </VerticalStack> */}\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\nfunction Code({ children }) {\n  return (\n    <Box\n      as=\"span\"\n      padding=\"025\"\n      // paddingInlineStart=\"1\"\n      // paddingInlineEnd=\"1\"\n      // background=\"bg-subdued\"\n      // borderWidth=\"1\"\n      // borderColor=\"border\"\n      // borderRadius=\"1\"\n    >\n      <code>{children}</code>\n    </Box>\n  );\n}\n", "import {\n  Box,\n  Card,\n  Layout,\n  Link,\n  List,\n  Page,\n  Text,\n  // VerticalStack,\n} from \"@shopify/polaris\";\n\nexport default function Portfolio() {\n  return (\n    <Page>\n      <ui-title-bar title=\"Portfolio\" />\n      <Layout>\n        <Layout.Section>\n          <Card>\n            {/* <VerticalStack gap=\"3\">\n              <Text as=\"p\" variant=\"bodyMd\">\n                The app template comes with an additional page which\n                demonstrates how to create multiple pages within app navigation\n                using{\" \"}\n                <Link\n                  url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                  target=\"_blank\"\n                >\n                  App Bridge\n                </Link>\n                .\n              </Text>\n              <Text as=\"p\" variant=\"bodyMd\">\n                To create your own page and have it show up in the app\n                navigation, add a page inside <Code>app/routes</Code>, and a\n                link to it in the <Code>&lt;ui-nav-menu&gt;</Code> component\n                found in <Code>app/routes/app.jsx</Code>.\n              </Text>\n            </VerticalStack> */}\n          </Card>\n        </Layout.Section>\n        <Layout.Section>\n          <Card>\n            {/* <VerticalStack gap=\"2\">\n              <Text as=\"h2\" variant=\"headingMd\">\n                Resources\n              </Text>\n              <List spacing=\"extraTight\">\n                <List.Item>\n                  <Link\n                    url=\"https://shopify.dev/docs/apps/design-guidelines/navigation#app-nav\"\n                    target=\"_blank\"\n                  >\n                    App nav best practices\n                  </Link>\n                </List.Item>\n              </List>\n            </VerticalStack> */}\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\nfunction Code({ children }) {\n  return (\n    <Box\n      as=\"span\"\n      padding=\"025\"\n      // paddingInlineStart=\"1\"\n      // paddingInlineEnd=\"1\"\n      // background=\"bg-subdued\"\n      // borderWidth=\"1\"\n      // borderColor=\"border\"\n      // borderRadius=\"1\"\n    >\n      <code>{children}</code>\n    </Box>\n  );\n}\n", "import { useEffect } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { Link, useActionData, useNavigation, useSubmit } from \"@remix-run/react\";\nimport {\n  Page,\n  Layout,\n  Text,\n  // VerticalStack,\n  Card,\n  Button,\n  // HorizontalStack,\n  Box,\n  Divider,\n  List,\n} from \"@shopify/polaris\";\n\nimport { authenticate } from \"../shopify.server\";\n\nexport const loader = async ({ request }) => {\n  await authenticate.admin(request);\n\n  return null;\n};\n\nexport async function action({ request }) {\n  const { admin } = await authenticate.admin(request);\n\n  const color = [\"Red\", \"Orange\", \"Yellow\", \"Green\"][\n    Math.floor(Math.random() * 4)\n  ];\n  const response = await admin.graphql(\n    `#graphql\n      mutation populateProduct($input: ProductInput!) {\n        productCreate(input: $input) {\n          product {\n            id\n            title\n            handle\n            status\n            variants(first: 10) {\n              edges {\n                node {\n                  id\n                  price\n                  barcode\n                  createdAt\n                }\n              }\n            }\n          }\n        }\n      }`,\n    {\n      variables: {\n        input: {\n          title: `${color} Snowboard`,\n          variants: [{ price: Math.random() * 100 }],\n        },\n      },\n    }\n  );\n\n  const responseJson = await response.json();\n\n  return json({\n    product: responseJson.data.productCreate.product,\n  });\n}\n\nexport default function Index() {\n  const nav = useNavigation();\n  const actionData = useActionData();\n  const submit = useSubmit();\n\n  const isLoading =\n    [\"loading\", \"submitting\"].includes(nav.state) && nav.formMethod === \"POST\";\n\n  const productId = actionData?.product?.id.replace(\n    \"gid://shopify/Product/\",\n    \"\"\n  );\n\n  useEffect(() => {\n    if (productId) {\n      shopify.toast.show(\"Product created\");\n    }\n  }, [productId]);\n\n  const generateProduct = () => submit({}, { replace: true, method: \"POST\" });\n\n  return (\n    <Page>\n      <ui-title-bar title=\"Barcode Generator\">\n        <Link\n          // variant=\"primary\"\n          // onClick={generateProduct}\n          to=\"/app/barcode-generator\"\n        >\n          Generate Barcodes\n        </Link>\n      </ui-title-bar>\n      {/* <VerticalStack gap=\"5\">\n        <Layout>\n          <Layout.Section>\n            <Card>\n              <VerticalStack gap=\"5\">\n                <VerticalStack gap=\"2\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    Congrats on creating a new Shopify app \uD83C\uDF89\n                  </Text>\n                  <Text variant=\"bodyMd\" as=\"p\">\n                    This embedded app template uses{\" \"}\n                    <Link\n                      url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                      target=\"_blank\"\n                    >\n                      App Bridge\n                    </Link>{\" \"}\n                    interface examples like an{\" \"}\n                    <Link url=\"/app/additional\">\n                      additional page in the app nav\n                    </Link>\n                    , as well as an{\" \"}\n                    <Link\n                      url=\"https://shopify.dev/docs/api/admin-graphql\"\n                      target=\"_blank\"\n                    >\n                      Admin GraphQL\n                    </Link>{\" \"}\n                    mutation demo, to provide a starting point for app\n                    development.\n                  </Text>\n                </VerticalStack>\n                <VerticalStack gap=\"2\">\n                  <Text as=\"h3\" variant=\"headingMd\">\n                    Get started with products\n                  </Text>\n                  <Text as=\"p\" variant=\"bodyMd\">\n                    Generate a product with GraphQL and get the JSON output for\n                    that product. Learn more about the{\" \"}\n                    <Link\n                      url=\"https://shopify.dev/docs/api/admin-graphql/latest/mutations/productCreate\"\n                      target=\"_blank\"\n                    >\n                      productCreate\n                    </Link>{\" \"}\n                    mutation in our API references.\n                  </Text>\n                </VerticalStack>\n                <HorizontalStack gap=\"3\" align=\"end\">\n                  {actionData?.product && (\n                    <Button\n                      url={`shopify:admin/products/${productId}`}\n                      target=\"_blank\"\n                    >\n                      View product\n                    </Button>\n                  )}\n                  <Button loading={isLoading} primary onClick={generateProduct}>\n                    Generate a product\n                  </Button>\n                </HorizontalStack>\n                {actionData?.product && (\n                  <Box\n                    padding=\"4\"\n                    background=\"bg-subdued\"\n                    borderColor=\"border\"\n                    borderWidth=\"1\"\n                    borderRadius=\"2\"\n                    overflowX=\"scroll\"\n                  >\n                    <pre style={{ margin: 0 }}>\n                      <code>{JSON.stringify(actionData.product, null, 2)}</code>\n                    </pre>\n                  </Box>\n                )}\n              </VerticalStack>\n            </Card>\n          </Layout.Section>\n          <Layout.Section secondary>\n            <VerticalStack gap=\"5\">\n              <Card>\n                <VerticalStack gap=\"2\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    App template specs\n                  </Text>\n                  <VerticalStack gap=\"2\">\n                    <Divider />\n                    <HorizontalStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Framework\n                      </Text>\n                      <Link url=\"https://remix.run\" target=\"_blank\">\n                        Remix\n                      </Link>\n                    </HorizontalStack>\n                    <Divider />\n                    <HorizontalStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Database\n                      </Text>\n                      <Link url=\"https://www.prisma.io/\" target=\"_blank\">\n                        Prisma\n                      </Link>\n                    </HorizontalStack>\n                    <Divider />\n                    <HorizontalStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Interface\n                      </Text>\n                      <span>\n                        <Link url=\"https://polaris.shopify.com\" target=\"_blank\">\n                          Polaris\n                        </Link>\n                        {\", \"}\n                        <Link\n                          url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                          target=\"_blank\"\n                        >\n                          App Bridge\n                        </Link>\n                      </span>\n                    </HorizontalStack>\n                    <Divider />\n                    <HorizontalStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        API\n                      </Text>\n                      <Link\n                        url=\"https://shopify.dev/docs/api/admin-graphql\"\n                        target=\"_blank\"\n                      >\n                        GraphQL API\n                      </Link>\n                    </HorizontalStack>\n                  </VerticalStack>\n                </VerticalStack>\n              </Card>\n              <Card>\n                <VerticalStack gap=\"2\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    Next steps\n                  </Text>\n                  <List spacing=\"extraTight\">\n                    <List.Item>\n                      Build an{\" \"}\n                      <Link\n                        url=\"https://shopify.dev/docs/apps/getting-started/build-app-example\"\n                        target=\"_blank\"\n                      >\n                        {\" \"}\n                        example app\n                      </Link>{\" \"}\n                      to get started\n                    </List.Item>\n                    <List.Item>\n                      Explore Shopify\u2019s API with{\" \"}\n                      <Link\n                        url=\"https://shopify.dev/docs/apps/tools/graphiql-admin-api\"\n                        target=\"_blank\"\n                      >\n                        GraphiQL\n                      </Link>\n                    </List.Item>\n                  </List>\n                </VerticalStack>\n              </Card>\n            </VerticalStack>\n          </Layout.Section>\n        </Layout>\n      </VerticalStack> */}\n    </Page>\n  );\n}\n", "import { useState } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport {\n  AppProvider as PolarisAppProvider,\n  Button,\n  Card,\n  FormLayout,\n  Page,\n  Text,\n  TextField } from\n\"@shopify/polaris\";\n\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\n\nimport { login } from \"../../shopify.server\";\nimport { loginErrorMessage } from \"./error.server\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport async function loader({ request }) {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors,\n    polarisTranslations: require(`@shopify/polaris/locales/en.json`)\n  });\n}\n\nexport async function action({ request }) {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors\n  });\n}\n\nexport default function Auth() {\n  const { polarisTranslations } = useLoaderData();\n  const loaderData = useLoaderData();\n  const actionData = useActionData();\n  const [shop, setShop] = useState(\"\");\n  const { errors } = actionData || loaderData;\n\n  return (\n    <PolarisAppProvider i18n={polarisTranslations}>\n      <Page>\n        <Card>\n          <Form method=\"post\">\n            <FormLayout>\n              <Text variant=\"headingMd\" as=\"h2\">\n                Log in\n              </Text>\n              <TextField\n                type=\"text\"\n                name=\"shop\"\n                label=\"Shop domain\"\n                helpText=\"example.myshopify.com\"\n                value={shop}\n                onChange={setShop}\n                autoComplete=\"on\"\n                error={errors.shop} />\n\n              <Button submit>Log in</Button>\n            </FormLayout>\n          </Form>\n        </Card>\n      </Page>\n    </PolarisAppProvider>);\n\n}", "import { LoginErrorType } from \"@shopify/shopify-app-remix/server\";\n\nexport function loginErrorMessage(loginErrors) {\n  if (loginErrors?.shop === LoginErrorType.MissingShop) {\n    return { shop: \"Please enter your shop domain to log in\" };\n  } else if (loginErrors?.shop === LoginErrorType.InvalidShop) {\n    return { shop: \"Please enter a valid shop domain to log in\" };\n  }\n\n  return {};\n}\n", "import { authenticate } from \"../shopify.server\";\nimport db from \"../db.server\";\n\nexport const action = async ({ request }) => {\n  const { topic, shop, session, admin, payload } = await authenticate.webhook(\n    request\n  );\n  if (!admin) {\n    // The admin context isn't returned if the webhook fired after a shop was uninstalled.\n    throw new Response();\n  }\n\n  switch (topic) {\n    case \"APP_UNINSTALLED\":\n      if (session) {\n        await db.session.deleteMany({ where: { shop } });\n      }\n      break;\n    case \"CUSTOMERS_DATA_REQUEST\":\n    case \"CUSTOMERS_REDACT\":\n    case \"SHOP_REDACT\":\n    default:\n      throw new Response(\"Unhandled webhook topic\", { status: 404 });\n  }\n\n  throw new Response();\n};\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\n\nimport { login } from \"../../shopify.server\";\n\nimport indexStyles from \"./style.css\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: indexStyles }];\n\nexport async function loader({ request }) {\n  const url = new URL(request.url);\n\n  if (url.searchParams.get(\"shop\")) {\n    throw redirect(`/app?${url.searchParams.toString()}`);\n  }\n\n  return json({ showForm: Boolean(login) });\n}\n\nexport default function App() {\n  const { showForm } = useLoaderData();\n\n  return (\n    <div className=\"index\">\n      <div className=\"content\">\n        <h1>A short heading about [your app]</h1>\n        <p>A tagline about [your app] that describes your value proposition.</p>\n        {showForm &&\n        <Form method=\"post\" action=\"/auth/login\">\n            <label>\n              <span>Shop domain</span>\n              <input type=\"text\" name=\"shop\" />\n              <span>e.g: my-shop-domain.myshopify.com</span>\n            </label>\n            <button type=\"submit\">Log in</button>\n          </Form>}\n\n        <ul>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n        </ul>\n      </div>\n    </div>);\n\n}", "import { authenticate } from \"../shopify.server\";\n\nexport async function loader({ request }) {\n  await authenticate.admin(request);\n\n  return null;\n}\n", "import { json } from \"@remix-run/node\";\nimport { Link, Outlet, useLoaderData, useRouteError } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\nimport { boundary } from \"@shopify/shopify-app-remix/server\";\nimport { AppProvider } from \"@shopify/shopify-app-remix/react\";\n\nimport { authenticate } from \"../shopify.server\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport async function loader({ request }) {\n  await authenticate.admin(request);\n\n  return json({ apiKey: process.env.SHOPIFY_API_KEY });\n}\n\nexport default function App() {\n  const { apiKey } = useLoaderData();\n\n  return (\n    <AppProvider isEmbeddedApp apiKey={apiKey}>\n      <ui-nav-menu>\n        {/* <Link to=\"/app\" rel=\"home\">\n           Home\n          </Link> */}\n        <Link to=\"/app/barcode-generator\" className=\"primary\">BarCode Generator</Link>\n        {/* <Link to=\"/app/portfolio\">Portfolio</Link> */}\n      </ui-nav-menu>\n      <Outlet />\n    </AppProvider>);\n\n}\n\n// Shopify needs Remix to catch some thrown responses, so that their headers are included in the response.\nexport function ErrorBoundary() {\n  return boundary.error(useRouteError());\n}\n\nexport const headers = (headersArgs) => {\n  return boundary.headers(headersArgs);\n};", "export default {'entry':{'module':'/build/entry.client-UL2FSJHI.js','imports':['/build/_shared/chunk-O4BRYNJ4.js','/build/_shared/chunk-BJF6I3FU.js','/build/_shared/chunk-I4BANYFV.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-XGOTYLZ5.js','/build/_shared/chunk-U4FRFQSK.js','/build/_shared/chunk-7M6SC7J5.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-32MKJWKQ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-SFAHKWAS.js','imports':['/build/_shared/chunk-3GJP5LZF.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/app':{'id':'routes/app','parentId':'root','path':'app','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app-WIVLUGB2.js','imports':['/build/_shared/chunk-B43JI2TA.js','/build/_shared/chunk-QDXPZB3I.js','/build/_shared/chunk-SU66BP3D.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-LYJJ6BAO.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':true},'routes/app._index':{'id':'routes/app._index','parentId':'routes/app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/app._index-HFGLZWFD.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/app.additional':{'id':'routes/app.additional','parentId':'routes/app','path':'additional','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.additional-4YIXVVWR.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/app.barcode-generator':{'id':'routes/app.barcode-generator','parentId':'routes/app','path':'barcode-generator','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.barcode-generator-ZGRVOBQN.js','imports':['/build/_shared/chunk-RQKLB3J3.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/app.dashboard copy':{'id':'routes/app.dashboard copy','parentId':'routes/app','path':'dashboard copy','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.dashboard copy-2WRIUD3P.js','imports':['/build/_shared/chunk-YSBSKNTT.js','/build/_shared/chunk-RQKLB3J3.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/app.dashboard_28_Nov_23':{'id':'routes/app.dashboard_28_Nov_23','parentId':'routes/app','path':'dashboard_28_Nov_23','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.dashboard_28_Nov_23-SUF3REP7.js','imports':['/build/_shared/chunk-YSBSKNTT.js','/build/_shared/chunk-RQKLB3J3.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/app.portfolio':{'id':'routes/app.portfolio','parentId':'routes/app','path':'portfolio','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.portfolio-GYK7QUFF.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/auth.$':{'id':'routes/auth.$','parentId':'root','path':'auth/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.$-4B5WQABX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/auth.login':{'id':'routes/auth.login','parentId':'root','path':'auth/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.login-RLTUVC56.js','imports':['/build/_shared/chunk-3GJP5LZF.js','/build/_shared/chunk-QDXPZB3I.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-LYJJ6BAO.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/webhooks':{'id':'routes/webhooks','parentId':'root','path':'webhooks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/webhooks-JFV2P4HI.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'e3b32ac3','hmr':{'runtime':'/build/_shared/chunk-I4BANYFV.js','timestamp':1723096763209},'url':'/build/manifest-E3B32AC3.js'};", "\nimport * as entryServer from \"/home/shivam/Projects/Giftcart/GiftcartTools/app/entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/app.dashboard_28_Nov_23.tsx\";\nimport * as route2 from \"./routes/app.barcode-generator.tsx\";\nimport * as route3 from \"./routes/app.dashboard copy.tsx\";\nimport * as route4 from \"./routes/app.additional.jsx\";\nimport * as route5 from \"./routes/app.portfolio.jsx\";\nimport * as route6 from \"./routes/app._index.jsx\";\nimport * as route7 from \"./routes/auth.login/route.jsx\";\nimport * as route8 from \"./routes/webhooks.jsx\";\nimport * as route9 from \"./routes/_index/route.jsx\";\nimport * as route10 from \"./routes/auth.$.jsx\";\nimport * as route11 from \"./routes/app.jsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"unstable_singleFetch\":false,\"unstable_lazyRouteDiscovery\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/app.dashboard_28_Nov_23\": {\n      id: \"routes/app.dashboard_28_Nov_23\",\n      parentId: \"routes/app\",\n      path: \"dashboard_28_Nov_23\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/app.barcode-generator\": {\n      id: \"routes/app.barcode-generator\",\n      parentId: \"routes/app\",\n      path: \"barcode-generator\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/app.dashboard copy\": {\n      id: \"routes/app.dashboard copy\",\n      parentId: \"routes/app\",\n      path: \"dashboard copy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/app.additional\": {\n      id: \"routes/app.additional\",\n      parentId: \"routes/app\",\n      path: \"additional\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/app.portfolio\": {\n      id: \"routes/app.portfolio\",\n      parentId: \"routes/app\",\n      path: \"portfolio\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/app._index\": {\n      id: \"routes/app._index\",\n      parentId: \"routes/app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/auth.login\": {\n      id: \"routes/auth.login\",\n      parentId: \"root\",\n      path: \"auth/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/webhooks\": {\n      id: \"routes/webhooks\",\n      parentId: \"root\",\n      path: \"webhooks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/auth.$\": {\n      id: \"routes/auth.$\",\n      parentId: \"root\",\n      path: \"auth/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/app\": {\n      id: \"routes/app\",\n      parentId: \"root\",\n      path: \"app\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    }\n  };"],
  "mappings": "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",
  "names": ["import_server", "import_node", "shopify", "shopify", "import_react", "import_jsx_dev_runtime", "import_polaris", "import_react", "import_react", "import_jsx_dev_runtime", "JsBarcode", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_polaris", "import_jsx_dev_runtime", "_", "Dashboard", "import_polaris", "import_react", "import_jsx_dev_runtime", "defaultData", "Dashboard", "import_polaris", "import_jsx_dev_runtime", "import_polaris", "import_jsx_dev_runtime", "import_react", "import_node", "import_polaris", "import_jsx_dev_runtime", "action", "loader", "import_react", "import_node", "import_polaris", "import_server", "import_jsx_dev_runtime", "loader", "action", "PolarisAppProvider", "action", "action", "route_exports", "App", "links", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "links", "loader", "App", "loader", "loader", "App", "links", "loader", "import_node", "import_react", "import_server", "import_react", "import_jsx_dev_runtime", "links", "loader", "App", "route_exports"]
}
